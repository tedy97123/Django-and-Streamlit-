{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\secre\\\\SApp\\\\stockviewer\\\\src\\\\components\\\\Finance.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { w3cwebsocket as websocket } from \"websocket\";\nimport { request } from 'websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst crypto_api = '966bab8576315a5977c6f37beb2bb1764cb23c0d';\n\nvar https = require('https');\n/* const axios = require('axios');\r\nlet response = null;  \r\nvar express = require('express')\r\nvar https = require('https')\r\nvar http = require('http')\r\nvar app = express()\r\nhttp.createServer(app).listen(3000)\r\nhttps.createServer(options, app).listen(3000) */\n\n\nlet AlpacaFinance = () => {\n  _s();\n\n  let [finance, setFinance] = useState({});\n\n  let get_fdata = async () => {\n    var options = {\n      \"method\": \"GET\",\n      \"hostname\": \"rest.cryptoapis.io\",\n      \"path\": \"/v2/market/data/assets/details\",\n      \"qs\": {\n        \"context\": \"yourExampleString\",\n        \"assetType\": \"crypto\",\n        \"CryptoType\": \"coin\",\n        \"limit\": 50,\n        \"offset\": 0,\n        \"waasEnabled\": true\n      },\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"X-API-Key\": '966bab8576315a5977c6f37beb2bb1764cb23c0d'\n      }\n    };\n    var req = https.request(options, function (res) {\n      var chunks = [];\n      res.on(\"data\", function (chunk) {\n        chunks.push(chunk);\n      });\n    });\n    req.end();\n  };\n\n  useEffect(() => {\n    get_fdata();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), \"teest\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 17\n  }, this);\n};\n\n_s(AlpacaFinance, \"rD1ljoojjopQjdRk7RIGJgsxDeQ=\");\n\n_c = AlpacaFinance;\nexport default AlpacaFinance;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlpacaFinance\");","map":{"version":3,"names":["React","useEffect","useState","w3cwebsocket","websocket","request","crypto_api","https","require","AlpacaFinance","finance","setFinance","get_fdata","options","req","res","chunks","on","chunk","push","end"],"sources":["C:/Users/secre/SApp/stockviewer/src/components/Finance.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport {useEffect , useState} from 'react';\r\nimport { w3cwebsocket as websocket } from \"websocket\";\r\nimport { request } from 'websocket';\r\nconst crypto_api = '966bab8576315a5977c6f37beb2bb1764cb23c0d'\r\n\r\nvar https = require('https')\r\n\r\n/* const axios = require('axios');\r\nlet response = null;  \r\nvar express = require('express')\r\nvar https = require('https')\r\nvar http = require('http')\r\nvar app = express()\r\nhttp.createServer(app).listen(3000)\r\nhttps.createServer(options, app).listen(3000) */\r\n\r\n\r\n\r\n\r\n \r\nlet AlpacaFinance = ()    => \r\n\r\n{\r\n \r\n    let [finance, setFinance ] = useState({}) ;\r\n\r\n    let get_fdata = async() =>\r\n     {\r\n        var options = {\r\n            \"method\":\"GET\",\r\n            \"hostname\":\"rest.cryptoapis.io\",\r\n            \"path\":\"/v2/market/data/assets/details\",\r\n            \"qs\": {\"context\":\"yourExampleString\",\"assetType\":\"crypto\",\"CryptoType\":\"coin\",\"limit\":50,\"offset\":0,\"waasEnabled\":true},\r\n            \"headers\": {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-API-Key\": ('966bab8576315a5977c6f37beb2bb1764cb23c0d')\r\n              }\r\n            };\r\n            var req = https.request(options, function (res) {\r\n                var chunks = [];\r\n              \r\n                res.on(\"data\", function (chunk) {\r\n                  chunks.push(chunk);\r\n                  \r\n                });    \r\n             });\r\n            req.end();\r\n     }\r\n        \r\n          \r\n          \r\n        \r\n     \r\n        useEffect(() => \r\n        {\r\n            get_fdata()\r\n        },[]);\r\n     \r\n \r\n            return(\r\n                <div>\r\n                <div>\r\n                \r\n                </div>\r\n            <div>\r\n                      \r\n                \r\n                    <div >\r\n                        <h2 > </h2>\r\n                        teest\r\n                        <p> </p>\r\n                        <div> </div>\r\n                        <a> </a>       \r\n                    </div>\r\n                \r\n                     \r\n                </div>\r\n                    \r\n            </div>\r\n        ) \r\n\r\n}\r\nexport default AlpacaFinance;"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,SAASC,YAAY,IAAIC,SAAzB,QAA0C,WAA1C;AACA,SAASC,OAAT,QAAwB,WAAxB;;AACA,MAAMC,UAAU,GAAG,0CAAnB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA,IAAIC,aAAa,GAAG,MAEpB;EAAA;;EAEI,IAAI,CAACC,OAAD,EAAUC,UAAV,IAAyBT,QAAQ,CAAC,EAAD,CAArC;;EAEA,IAAIU,SAAS,GAAG,YACf;IACG,IAAIC,OAAO,GAAG;MACV,UAAS,KADC;MAEV,YAAW,oBAFD;MAGV,QAAO,gCAHG;MAIV,MAAM;QAAC,WAAU,mBAAX;QAA+B,aAAY,QAA3C;QAAoD,cAAa,MAAjE;QAAwE,SAAQ,EAAhF;QAAmF,UAAS,CAA5F;QAA8F,eAAc;MAA5G,CAJI;MAKV,WAAW;QACP,gBAAgB,kBADT;QAEP,aAAc;MAFP;IALD,CAAd;IAUI,IAAIC,GAAG,GAAGP,KAAK,CAACF,OAAN,CAAcQ,OAAd,EAAuB,UAAUE,GAAV,EAAe;MAC5C,IAAIC,MAAM,GAAG,EAAb;MAEAD,GAAG,CAACE,EAAJ,CAAO,MAAP,EAAe,UAAUC,KAAV,EAAiB;QAC9BF,MAAM,CAACG,IAAP,CAAYD,KAAZ;MAED,CAHD;IAIF,CAPQ,CAAV;IAQAJ,GAAG,CAACM,GAAJ;EACN,CArBF;;EA2BInB,SAAS,CAAC,MACV;IACIW,SAAS;EACZ,CAHQ,EAGP,EAHO,CAAT;EAMI,oBACI;IAAA,wBACA;MAAA;MAAA;MAAA;IAAA,QADA,eAIJ;MAAA,uBAGQ;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,wBAGI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAKI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA;IAHR;MAAA;MAAA;MAAA;IAAA,QAJI;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBX,CA7DD;;GAAIH,a;;KAAAA,a;AA8DJ,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}